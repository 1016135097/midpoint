-- It's no use putting Quartz and Activiti in the same DB as midPoint data. (They need different modes of db opening.)
-- So, contrary to all the other databases, this file contains only midPoint-related scripts.
-- If you want to add Quartz and Activiti-related tables, please use files from quartz and activiti directories, respectively.

create table m_acc_cert_campaign (definitionRef_relation varchar(157), definitionRef_targetOid varchar(36), definitionRef_type integer, endTimestamp timestamp, handlerUri varchar(255), name_norm varchar(255), name_orig varchar(255), ownerRef_relation varchar(157), ownerRef_targetOid varchar(36), ownerRef_type integer, stageNumber integer, startTimestamp timestamp, state integer, oid varchar(36) not null, primary key (oid));
create table m_acc_cert_case (id integer not null, owner_oid varchar(36) not null, administrativeStatus integer, archiveTimestamp timestamp, disableReason varchar(255), disableTimestamp timestamp, effectiveStatus integer, enableTimestamp timestamp, validFrom timestamp, validTo timestamp, validityChangeTimestamp timestamp, validityStatus integer, currentStageOutcome varchar(255), fullObject blob, objectRef_relation varchar(157), objectRef_targetOid varchar(36), objectRef_type integer, orgRef_relation varchar(157), orgRef_targetOid varchar(36), orgRef_type integer, outcome varchar(255), remediedTimestamp timestamp, reviewDeadline timestamp, reviewRequestedTimestamp timestamp, stageNumber integer, targetRef_relation varchar(157), targetRef_targetOid varchar(36), targetRef_type integer, tenantRef_relation varchar(157), tenantRef_targetOid varchar(36), tenantRef_type integer, primary key (id, owner_oid));
create table m_acc_cert_definition (handlerUri varchar(255), lastCampaignClosedTimestamp timestamp, lastCampaignStartedTimestamp timestamp, name_norm varchar(255), name_orig varchar(255), ownerRef_relation varchar(157), ownerRef_targetOid varchar(36), ownerRef_type integer, oid varchar(36) not null, primary key (oid));
create table m_acc_cert_wi (id integer not null, owner_id integer not null, owner_owner_oid varchar(36) not null, closeTimestamp timestamp, outcome varchar(255), outputChangeTimestamp timestamp, performerRef_relation varchar(157), performerRef_targetOid varchar(36), performerRef_type integer, stageNumber integer, primary key (id, owner_id, owner_owner_oid));
create table m_acc_cert_wi_reference (owner_id integer not null, owner_owner_id integer not null, owner_owner_owner_oid varchar(36) not null, relation varchar(157) not null, targetOid varchar(36) not null, targetType integer, primary key (owner_id, owner_owner_id, owner_owner_owner_oid, relation, targetOid));
create table m_assignment (id integer not null, owner_oid varchar(36) not null, administrativeStatus integer, archiveTimestamp timestamp, disableReason varchar(255), disableTimestamp timestamp, effectiveStatus integer, enableTimestamp timestamp, validFrom timestamp, validTo timestamp, validityChangeTimestamp timestamp, validityStatus integer, assignmentOwner integer, createChannel varchar(255), createTimestamp timestamp, creatorRef_relation varchar(157), creatorRef_targetOid varchar(36), creatorRef_type integer, lifecycleState varchar(255), modifierRef_relation varchar(157), modifierRef_targetOid varchar(36), modifierRef_type integer, modifyChannel varchar(255), modifyTimestamp timestamp, orderValue integer, orgRef_relation varchar(157), orgRef_targetOid varchar(36), orgRef_type integer, resourceRef_relation varchar(157), resourceRef_targetOid varchar(36), resourceRef_type integer, targetRef_relation varchar(157), targetRef_targetOid varchar(36), targetRef_type integer, tenantRef_relation varchar(157), tenantRef_targetOid varchar(36), tenantRef_type integer, extId integer, extOid varchar(36), primary key (id, owner_oid));
create table m_assignment_ext_boolean (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, booleanValue boolean not null, primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, booleanValue));
create table m_assignment_ext_date (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, dateValue timestamp not null, primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, dateValue));
create table m_assignment_ext_long (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, longValue bigint not null, primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, longValue));
create table m_assignment_ext_poly (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, orig varchar(255) not null, norm varchar(255), primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, orig));
create table m_assignment_ext_reference (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, targetoid varchar(36) not null, relation varchar(157), targetType integer, primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, targetoid));
create table m_assignment_ext_string (item_id integer not null, anyContainer_owner_id integer not null, anyContainer_owner_owner_oid varchar(36) not null, stringValue varchar(255) not null, primary key ( anyContainer_owner_owner_oid, anyContainer_owner_id, item_id, stringValue));
create table m_assignment_extension (owner_id integer not null, owner_owner_oid varchar(36) not null, booleansCount smallint, datesCount smallint, longsCount smallint, polysCount smallint, referencesCount smallint, stringsCount smallint, primary key (owner_id, owner_owner_oid));
create table m_assignment_policy_situation (assignment_id integer not null, assignment_oid varchar(36) not null, policySituation varchar(255));
create table m_assignment_reference (owner_id integer not null, owner_owner_oid varchar(36) not null, reference_type integer not null, relation varchar(157) not null, targetOid varchar(36) not null, targetType integer, primary key (owner_id, owner_owner_oid, reference_type, relation, targetOid));
create table m_audit_delta (checksum varchar(32) not null, record_id bigint not null, delta blob, deltaOid varchar(36), deltaType integer, fullResult blob, objectName_norm varchar(255), objectName_orig varchar(255), resourceName_norm varchar(255), resourceName_orig varchar(255), resourceOid varchar(36), status integer, primary key (checksum, record_id));
create table m_audit_event (id bigint generated by default as identity, attorneyName varchar(255), attorneyOid varchar(36), channel varchar(255), eventIdentifier varchar(255), eventStage integer, eventType integer, hostIdentifier varchar(255), initiatorName varchar(255), initiatorOid varchar(36), initiatorType integer, message varchar(1024), nodeIdentifier varchar(255), outcome integer, parameter varchar(255), remoteHostAddress varchar(255), result varchar(255), sessionIdentifier varchar(255), targetName varchar(255), targetOid varchar(36), targetOwnerName varchar(255), targetOwnerOid varchar(36), targetType integer, taskIdentifier varchar(255), taskOID varchar(255), timestampValue timestamp, primary key (id));
create table m_audit_item (changedItemPath varchar(900) not null, record_id bigint not null, primary key (changedItemPath, record_id));
create table m_audit_prop_value (id bigint generated by default as identity, name varchar(255), record_id bigint, value varchar(1024), primary key (id));
create table m_audit_ref_value (id bigint generated by default as identity, name varchar(255), oid varchar(255), record_id bigint, targetName_norm varchar(255), targetName_orig varchar(255), type varchar(255), primary key (id));
create table m_connector_target_system (connector_oid varchar(36) not null, targetSystemType varchar(255));
create table m_ext_item (id integer generated by default as identity, kind integer, itemName varchar(157), itemType varchar(157), primary key (id));
create table m_focus_photo (owner_oid varchar(36) not null, photo blob, primary key (owner_oid));
create table m_focus_policy_situation (focus_oid varchar(36) not null, policySituation varchar(255));
create table m_object (oid varchar(36) not null, booleansCount smallint, createChannel varchar(255), createTimestamp timestamp, creatorRef_relation varchar(157), creatorRef_targetOid varchar(36), creatorRef_type integer, datesCount smallint, fullObject blob, lifecycleState varchar(255), longsCount smallint, modifierRef_relation varchar(157), modifierRef_targetOid varchar(36), modifierRef_type integer, modifyChannel varchar(255), modifyTimestamp timestamp, name_norm varchar(255), name_orig varchar(255), objectTypeClass integer, polysCount smallint, referencesCount smallint, stringsCount smallint, tenantRef_relation varchar(157), tenantRef_targetOid varchar(36), tenantRef_type integer, version integer not null, primary key (oid));
create table m_object_ext_boolean (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, booleanValue boolean not null, primary key (owner_oid, ownerType, item_id, booleanValue));
create table m_object_ext_date (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, dateValue timestamp not null, primary key (owner_oid, ownerType, item_id, dateValue));
create table m_object_ext_long (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, longValue bigint not null, primary key (owner_oid, ownerType, item_id, longValue));
create table m_object_ext_poly (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, orig varchar(255) not null, norm varchar(255), primary key (owner_oid, ownerType, item_id, orig));
create table m_object_ext_reference (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, targetoid varchar(36) not null, relation varchar(157), targetType integer, primary key (owner_oid, ownerType, item_id, targetoid));
create table m_object_ext_string (item_id integer not null, owner_oid varchar(36) not null, ownerType integer not null, stringValue varchar(255) not null, primary key (owner_oid, ownerType, item_id, stringValue));
create table m_object_subtype (object_oid varchar(36) not null, subType varchar(255));
create table m_object_text_info (owner_oid varchar(36) not null, text varchar(255) not null, primary key (owner_oid, text));
create table m_operation_execution (id integer not null, owner_oid varchar(36) not null, initiatorRef_relation varchar(157), initiatorRef_targetOid varchar(36), initiatorRef_type integer, status integer, taskRef_relation varchar(157), taskRef_targetOid varchar(36), taskRef_type integer, timestampValue timestamp, primary key (id, owner_oid));
create table m_org_closure (ancestor_oid varchar(36) not null, descendant_oid varchar(36) not null, val integer, primary key (ancestor_oid, descendant_oid));
create table m_org_org_type (org_oid varchar(36) not null, orgType varchar(255));
create table m_reference (owner_oid varchar(36) not null, reference_type integer not null, relation varchar(157) not null, targetOid varchar(36) not null, targetType integer, primary key (owner_oid, reference_type, relation, targetOid));
create table m_service_type (service_oid varchar(36) not null, serviceType varchar(255));
create table m_shadow (attemptNumber integer, dead boolean, exist boolean, failedOperationType integer, fullSynchronizationTimestamp timestamp, intent varchar(255), kind integer, name_norm varchar(255), name_orig varchar(255), objectClass varchar(157), pendingOperationCount integer, resourceRef_relation varchar(157), resourceRef_targetOid varchar(36), resourceRef_type integer, status integer, synchronizationSituation integer, synchronizationTimestamp timestamp, oid varchar(36) not null, primary key (oid));
create table m_task (binding integer, canRunOnNode varchar(255), category varchar(255), completionTimestamp timestamp, executionStatus integer, handlerUri varchar(255), lastRunFinishTimestamp timestamp, lastRunStartTimestamp timestamp, name_norm varchar(255), name_orig varchar(255), node varchar(255), objectRef_relation varchar(157), objectRef_targetOid varchar(36), objectRef_type integer, ownerRef_relation varchar(157), ownerRef_targetOid varchar(36), ownerRef_type integer, parent varchar(255), recurrence integer, status integer, taskIdentifier varchar(255), threadStopAction integer, waitingReason integer, wfEndTimestamp timestamp, wfObjectRef_relation varchar(157), wfObjectRef_targetOid varchar(36), wfObjectRef_type integer, wfProcessInstanceId varchar(255), wfRequesterRef_relation varchar(157), wfRequesterRef_targetOid varchar(36), wfRequesterRef_type integer, wfStartTimestamp timestamp, wfTargetRef_relation varchar(157), wfTargetRef_targetOid varchar(36), wfTargetRef_type integer, oid varchar(36) not null, primary key (oid));
create table m_task_dependent (task_oid varchar(36) not null, dependent varchar(255));
create table m_user_employee_type (user_oid varchar(36) not null, employeeType varchar(255));
create table m_user_organization (user_oid varchar(36) not null, norm varchar(255), orig varchar(255));
create table m_user_organizational_unit (user_oid varchar(36) not null, norm varchar(255), orig varchar(255));
create table m_abstract_role (approvalProcess varchar(255), autoassign_enabled boolean, displayName_norm varchar(255), displayName_orig varchar(255), identifier varchar(255), ownerRef_relation varchar(157), ownerRef_targetOid varchar(36), ownerRef_type integer, requestable boolean, riskLevel varchar(255), oid varchar(36) not null, primary key (oid));
create table m_case (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_connector (connectorBundle varchar(255), connectorHostRef_relation varchar(157), connectorHostRef_targetOid varchar(36), connectorHostRef_type integer, connectorType varchar(255), connectorVersion varchar(255), framework varchar(255), name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_connector_host (hostname varchar(255), name_norm varchar(255), name_orig varchar(255), port varchar(255), oid varchar(36) not null, primary key (oid));
create table m_focus (administrativeStatus integer, archiveTimestamp timestamp, disableReason varchar(255), disableTimestamp timestamp, effectiveStatus integer, enableTimestamp timestamp, validFrom timestamp, validTo timestamp, validityChangeTimestamp timestamp, validityStatus integer, costCenter varchar(255), emailAddress varchar(255), hasPhoto boolean default false not null, locale varchar(255), locality_norm varchar(255), locality_orig varchar(255), preferredLanguage varchar(255), telephoneNumber varchar(255), timezone varchar(255), oid varchar(36) not null, primary key (oid));
create table m_form (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_function_library (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_generic_object (name_norm varchar(255), name_orig varchar(255), objectType varchar(255), oid varchar(36) not null, primary key (oid));
create table m_lookup_table (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_lookup_table_row (id integer not null, owner_oid varchar(36) not null, row_key varchar(255), label_norm varchar(255), label_orig varchar(255), lastChangeTimestamp timestamp, row_value varchar(255), primary key (id, owner_oid));
create table m_node (name_norm varchar(255), name_orig varchar(255), nodeIdentifier varchar(255), oid varchar(36) not null, primary key (oid));
create table m_object_template (name_norm varchar(255), name_orig varchar(255), type integer, oid varchar(36) not null, primary key (oid));
create table m_org (displayOrder integer, name_norm varchar(255), name_orig varchar(255), tenant boolean, oid varchar(36) not null, primary key (oid));
create table m_report (export integer, name_norm varchar(255), name_orig varchar(255), orientation integer, parent boolean, useHibernateSession boolean, oid varchar(36) not null, primary key (oid));
create table m_report_output (name_norm varchar(255), name_orig varchar(255), reportRef_relation varchar(157), reportRef_targetOid varchar(36), reportRef_type integer, oid varchar(36) not null, primary key (oid));
create table m_resource (administrativeState integer, connectorRef_relation varchar(157), connectorRef_targetOid varchar(36), connectorRef_type integer, name_norm varchar(255), name_orig varchar(255), o16_lastAvailabilityStatus integer, oid varchar(36) not null, primary key (oid));
create table m_role (name_norm varchar(255), name_orig varchar(255), roleType varchar(255), oid varchar(36) not null, primary key (oid));
create table m_security_policy (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_sequence (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_service (displayOrder integer, name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_system_configuration (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_trigger (id integer not null, owner_oid varchar(36) not null, handlerUri varchar(255), timestampValue timestamp, primary key (id, owner_oid));
create table m_user (additionalName_norm varchar(255), additionalName_orig varchar(255), employeeNumber varchar(255), familyName_norm varchar(255), familyName_orig varchar(255), fullName_norm varchar(255), fullName_orig varchar(255), givenName_norm varchar(255), givenName_orig varchar(255), honorificPrefix_norm varchar(255), honorificPrefix_orig varchar(255), honorificSuffix_norm varchar(255), honorificSuffix_orig varchar(255), name_norm varchar(255), name_orig varchar(255), nickName_norm varchar(255), nickName_orig varchar(255), title_norm varchar(255), title_orig varchar(255), oid varchar(36) not null, primary key (oid));
create table m_value_policy (name_norm varchar(255), name_orig varchar(255), oid varchar(36) not null, primary key (oid));
alter table m_acc_cert_campaign add constraint uc_acc_cert_campaign_name unique (name_norm);
create index iCaseObjectRefTargetOid on m_acc_cert_case (objectRef_targetOid);
create index iCaseTargetRefTargetOid on m_acc_cert_case (targetRef_targetOid);
create index iCaseTenantRefTargetOid on m_acc_cert_case (tenantRef_targetOid);
create index iCaseOrgRefTargetOid on m_acc_cert_case (orgRef_targetOid);
alter table m_acc_cert_definition add constraint uc_acc_cert_definition_name unique (name_norm);
create index iCertWorkItemRefTargetOid on m_acc_cert_wi_reference (targetOid);
create index iAssignmentAdministrative on m_assignment (administrativeStatus);
create index iAssignmentEffective on m_assignment (effectiveStatus);
create index iTargetRefTargetOid on m_assignment (targetRef_targetOid);
create index iTenantRefTargetOid on m_assignment (tenantRef_targetOid);
create index iOrgRefTargetOid on m_assignment (orgRef_targetOid);
create index iResourceRefTargetOid on m_assignment (resourceRef_targetOid);
create index iAExtensionBoolean on m_assignment_ext_boolean (booleanValue);
create index iAExtensionDate on m_assignment_ext_date (dateValue);
create index iAExtensionLong on m_assignment_ext_long (longValue);
create index iAExtensionPolyString on m_assignment_ext_poly (orig);
create index iAExtensionReference on m_assignment_ext_reference (targetoid);
create index iAExtensionString on m_assignment_ext_string (stringValue);
create index iAssignmentReferenceTargetOid on m_assignment_reference (targetOid);
create index iTimestampValue on m_audit_event (timestampValue);
create index iChangedItemPath on m_audit_item (changedItemPath);
create index iAuditPropValRecordId on m_audit_prop_value (record_id);
create index iAuditRefValRecordId on m_audit_ref_value (record_id);
create index iObjectNameOrig on m_object (name_orig);
create index iObjectNameNorm on m_object (name_norm);
create index iObjectTypeClass on m_object (objectTypeClass);
create index iObjectCreateTimestamp on m_object (createTimestamp);
create index iObjectLifecycleState on m_object (lifecycleState);
create index iExtensionBoolean on m_object_ext_boolean (booleanValue);
create index iExtensionDate on m_object_ext_date (dateValue);
create index iExtensionLong on m_object_ext_long (longValue);
create index iExtensionPolyString on m_object_ext_poly (orig);
create index iExtensionReference on m_object_ext_reference (targetoid);
create index iExtensionString on m_object_ext_string (stringValue);
create index iOpExecTaskOid on m_operation_execution (taskRef_targetOid);
create index iOpExecInitiatorOid on m_operation_execution (initiatorRef_targetOid);
create index iOpExecStatus on m_operation_execution (status);
create index iOpExecOwnerOid on m_operation_execution (owner_oid);
create index iAncestor on m_org_closure (ancestor_oid);
create index iDescendant on m_org_closure (descendant_oid);
create index iDescendantAncestor on m_org_closure (descendant_oid, ancestor_oid);
create index iReferenceTargetOid on m_reference (targetOid);
create index iShadowResourceRef on m_shadow (resourceRef_targetOid);
create index iShadowDead on m_shadow (dead);
create index iShadowKind on m_shadow (kind);
create index iShadowIntent on m_shadow (intent);
create index iShadowObjectClass on m_shadow (objectClass);
create index iShadowFailedOperationType on m_shadow (failedOperationType);
create index iShadowSyncSituation on m_shadow (synchronizationSituation);
create index iShadowPendingOperationCount on m_shadow (pendingOperationCount);
create index iParent on m_task (parent);
create index iTaskWfProcessInstanceId on m_task (wfProcessInstanceId);
create index iTaskWfStartTimestamp on m_task (wfStartTimestamp);
create index iTaskWfEndTimestamp on m_task (wfEndTimestamp);
create index iTaskWfRequesterOid on m_task (wfRequesterRef_targetOid);
create index iTaskWfObjectOid on m_task (wfObjectRef_targetOid);
create index iTaskWfTargetOid on m_task (wfTargetRef_targetOid);
alter table m_task add constraint uc_task_identifier unique (taskIdentifier);
create index iAbstractRoleIdentifier on m_abstract_role (identifier);
create index iRequestable on m_abstract_role (requestable);
create index iAutoassignEnabled on m_abstract_role (autoassign_enabled);
alter table m_case add constraint uc_case_name unique (name_norm);
alter table m_connector_host add constraint uc_connector_host_name unique (name_norm);
create index iFocusAdministrative on m_focus (administrativeStatus);
create index iFocusEffective on m_focus (effectiveStatus);
create index iLocality on m_focus (locality_orig);
alter table m_form add constraint uc_form_name unique (name_norm);
alter table m_function_library add constraint uc_function_library_name unique (name_norm);
alter table m_generic_object add constraint uc_generic_object_name unique (name_norm);
alter table m_lookup_table add constraint uc_lookup_name unique (name_norm);
alter table m_lookup_table_row add constraint uc_row_key unique (owner_oid, row_key);
alter table m_node add constraint uc_node_name unique (name_norm);
alter table m_object_template add constraint uc_object_template_name unique (name_norm);
create index iDisplayOrder on m_org (displayOrder);
alter table m_org add constraint uc_org_name unique (name_norm);
create index iReportParent on m_report (parent);
alter table m_report add constraint uc_report_name unique (name_norm);
alter table m_resource add constraint uc_resource_name unique (name_norm);
alter table m_role add constraint uc_role_name unique (name_norm);
alter table m_security_policy add constraint uc_security_policy_name unique (name_norm);
alter table m_sequence add constraint uc_sequence_name unique (name_norm);
alter table m_system_configuration add constraint uc_system_configuration_name unique (name_norm);
create index iTriggerTimestamp on m_trigger (timestampValue);
create index iFullName on m_user (fullName_orig);
create index iFamilyName on m_user (familyName_orig);
create index iGivenName on m_user (givenName_orig);
create index iEmployeeNumber on m_user (employeeNumber);
alter table m_user add constraint uc_user_name unique (name_norm);
alter table m_value_policy add constraint uc_value_policy_name unique (name_norm);
alter table m_acc_cert_campaign add constraint fk_acc_cert_campaign foreign key (oid) references m_object;
alter table m_acc_cert_case add constraint fk_acc_cert_case_owner foreign key (owner_oid) references m_acc_cert_campaign;
alter table m_acc_cert_definition add constraint fk_acc_cert_definition foreign key (oid) references m_object;
alter table m_acc_cert_wi add constraint fk_acc_cert_wi_owner foreign key (owner_id, owner_owner_oid) references m_acc_cert_case;
alter table m_acc_cert_wi_reference add constraint fk_acc_cert_wi_ref_owner foreign key (owner_id, owner_owner_id, owner_owner_owner_oid) references m_acc_cert_wi;
alter table m_assignment add constraint fk_assignment_owner foreign key (owner_oid) references m_object;
alter table m_assignment_ext_boolean add constraint fk_a_ext_boolean_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_boolean add constraint fk_a_ext_boolean_item foreign key (item_id) references m_ext_item;
alter table m_assignment_ext_date add constraint fk_a_ext_date_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_date add constraint fk_a_ext_date_item foreign key (item_id) references m_ext_item;
alter table m_assignment_ext_long add constraint fk_a_ext_long_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_long add constraint fk_a_ext_long_item foreign key (item_id) references m_ext_item;
alter table m_assignment_ext_poly add constraint fk_a_ext_poly_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_poly add constraint fk_a_ext_poly_item foreign key (item_id) references m_ext_item;
alter table m_assignment_ext_reference add constraint fk_a_ext_reference_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_reference add constraint fk_a_ext_boolean_reference foreign key (item_id) references m_ext_item;
alter table m_assignment_ext_string add constraint fk_a_ext_string_owner foreign key (anyContainer_owner_id, anyContainer_owner_owner_oid) references m_assignment_extension;
alter table m_assignment_ext_string add constraint fk_a_ext_string_item foreign key (item_id) references m_ext_item;
alter table m_assignment_policy_situation add constraint fk_assignment_policy_situation foreign key (assignment_id, assignment_oid) references m_assignment;
alter table m_assignment_reference add constraint fk_assignment_reference foreign key (owner_id, owner_owner_oid) references m_assignment;
alter table m_audit_delta add constraint fk_audit_delta foreign key (record_id) references m_audit_event;
alter table m_audit_item add constraint fk_audit_item foreign key (record_id) references m_audit_event;
alter table m_audit_prop_value add constraint fk_audit_prop_value foreign key (record_id) references m_audit_event;
alter table m_audit_ref_value add constraint fk_audit_ref_value foreign key (record_id) references m_audit_event;
alter table m_connector_target_system add constraint fk_connector_target_system foreign key (connector_oid) references m_connector;
alter table m_focus_photo add constraint fk_focus_photo foreign key (owner_oid) references m_focus;
alter table m_focus_policy_situation add constraint fk_focus_policy_situation foreign key (focus_oid) references m_focus;
alter table m_object_ext_boolean add constraint fk_o_ext_boolean_owner foreign key (owner_oid) references m_object;
alter table m_object_ext_boolean add constraint fk_o_ext_boolean_item foreign key (item_id) references m_ext_item;
alter table m_object_ext_date add constraint fk_o_ext_date_owner foreign key (owner_oid) references m_object;
alter table m_object_ext_date add constraint fk_o_ext_date_item foreign key (item_id) references m_ext_item;
alter table m_object_ext_long add constraint fk_object_ext_long foreign key (owner_oid) references m_object;
alter table m_object_ext_long add constraint fk_o_ext_long_item foreign key (item_id) references m_ext_item;
alter table m_object_ext_poly add constraint fk_o_ext_poly_owner foreign key (owner_oid) references m_object;
alter table m_object_ext_poly add constraint fk_o_ext_poly_item foreign key (item_id) references m_ext_item;
alter table m_object_ext_reference add constraint fk_o_ext_reference_owner foreign key (owner_oid) references m_object;
alter table m_object_ext_reference add constraint fk_o_ext_reference_item foreign key (item_id) references m_ext_item;
alter table m_object_ext_string add constraint fk_object_ext_string foreign key (owner_oid) references m_object;
alter table m_object_ext_string add constraint fk_o_ext_string_item foreign key (item_id) references m_ext_item;
alter table m_object_subtype add constraint fk_object_subtype foreign key (object_oid) references m_object;
alter table m_object_text_info add constraint fk_object_text_info_owner foreign key (owner_oid) references m_object;
alter table m_operation_execution add constraint fk_op_exec_owner foreign key (owner_oid) references m_object;
alter table m_org_closure add constraint fk_ancestor foreign key (ancestor_oid) references m_object;
alter table m_org_closure add constraint fk_descendant foreign key (descendant_oid) references m_object;
alter table m_org_org_type add constraint fk_org_org_type foreign key (org_oid) references m_org;
alter table m_reference add constraint fk_reference_owner foreign key (owner_oid) references m_object;
alter table m_service_type add constraint fk_service_type foreign key (service_oid) references m_service;
alter table m_shadow add constraint fk_shadow foreign key (oid) references m_object;
alter table m_task add constraint fk_task foreign key (oid) references m_object;
alter table m_task_dependent add constraint fk_task_dependent foreign key (task_oid) references m_task;
alter table m_user_employee_type add constraint fk_user_employee_type foreign key (user_oid) references m_user;
alter table m_user_organization add constraint fk_user_organization foreign key (user_oid) references m_user;
alter table m_user_organizational_unit add constraint fk_user_org_unit foreign key (user_oid) references m_user;
alter table m_abstract_role add constraint fk_abstract_role foreign key (oid) references m_focus;
alter table m_case add constraint fk_case foreign key (oid) references m_object;
alter table m_connector add constraint fk_connector foreign key (oid) references m_object;
alter table m_connector_host add constraint fk_connector_host foreign key (oid) references m_object;
alter table m_focus add constraint fk_focus foreign key (oid) references m_object;
alter table m_form add constraint fk_form foreign key (oid) references m_object;
alter table m_function_library add constraint fk_function_library foreign key (oid) references m_object;
alter table m_generic_object add constraint fk_generic_object foreign key (oid) references m_object;
alter table m_lookup_table add constraint fk_lookup_table foreign key (oid) references m_object;
alter table m_lookup_table_row add constraint fk_lookup_table_owner foreign key (owner_oid) references m_lookup_table;
alter table m_node add constraint fk_node foreign key (oid) references m_object;
alter table m_object_template add constraint fk_object_template foreign key (oid) references m_object;
alter table m_org add constraint fk_org foreign key (oid) references m_abstract_role;
alter table m_report add constraint fk_report foreign key (oid) references m_object;
alter table m_report_output add constraint fk_report_output foreign key (oid) references m_object;
alter table m_resource add constraint fk_resource foreign key (oid) references m_object;
alter table m_role add constraint fk_role foreign key (oid) references m_abstract_role;
alter table m_security_policy add constraint fk_security_policy foreign key (oid) references m_object;
alter table m_sequence add constraint fk_sequence foreign key (oid) references m_object;
alter table m_service add constraint fk_service foreign key (oid) references m_abstract_role;
alter table m_system_configuration add constraint fk_system_configuration foreign key (oid) references m_object;
alter table m_trigger add constraint fk_trigger_owner foreign key (owner_oid) references m_object;
alter table m_user add constraint fk_user foreign key (oid) references m_focus;
alter table m_value_policy add constraint fk_value_policy foreign key (oid) references m_object;

commit;
