<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2010-2019 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xsd:schema targetNamespace="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:tns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3"
            xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
            xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            elementFormDefault="qualified"
            xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
            jaxb:extensionBindingPrefixes="xjc"
            jaxb:version="2.0">

    <xsd:annotation>
        <xsd:documentation>
            Parts related to processing of data messages (JMS, AMQP, etc).
        </xsd:documentation>
    </xsd:annotation>

    <!-- Don't provide schemaLocation here, as it causes xjc to really contact the URIs (!) -->
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/annotation-3"/>
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/types-3"/>

    <xsd:include schemaLocation="http://midpoint.evolveum.com/xml/ns/public/common/common-core-3" />

    <xsd:complexType name="MessageSourceConfigurationType">
        <xsd:annotation>
            <xsd:documentation>
                Messaging client configuration
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="uri" type="xsd:anyURI" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Connection URI.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="username" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        User name used to authenticate to AMQP server.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="password" type="t:ProtectedStringType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Password used to authenticate to AMQP server.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="messageSourceConfigurationType" type="tns:MessageSourceConfigurationType"/>

    <xsd:complexType name="Amqp091SourceConfigurationType">
        <xsd:annotation>
            <xsd:documentation>
                AMQP client configuration
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:MessageSourceConfigurationType">
                <xsd:sequence>
                    <xsd:element name="virtualHost" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                AMQP virtual host; the default value is "/".
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="queue" type="xsd:string" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Name of the queue to receive messages from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="amqp091SourceConfigurationType" type="tns:Amqp091SourceConfigurationType"/>

    <xsd:complexType name="MessageProcessingConfigurationType">
        <xsd:annotation>
            <xsd:documentation>
                Message processing configuration.
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="source" type="tns:MessageSourceConfigurationType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Source of messages.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="consumerExpression" type="tns:ExpressionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Expression that receives a message and consumes it. Returns true if the message is to be acknowledged;
                        null, false or exception otherwise.
                        Mutually exclusive with transformerExpression.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="transformerExpression" type="tns:ExpressionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Expression that transforms a message into a set of ResourceObjectShadowChangeDescriptionType,
                        to be processed as a change. Returns null or an empty set if the message is to be simply discarded.
                        Mutually exclusive with consumerExpression.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="messageProcessingConfiguration" type="tns:MessageProcessingConfigurationType"/>

    <xsd:complexType name="DataMessageType">
        <xsd:annotation>
            <xsd:documentation>
                Representation of JMS/AMQP message.
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <!-- currently there are no common attributes now -->
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="dataMessage" type="tns:DataMessageType"/>

    <xsd:complexType name="Amqp091MessageType">
        <xsd:annotation>
            <xsd:documentation>
                Representation AMQP 0-9-1 message.
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:DataMessageType">
                <xsd:sequence>
                    <xsd:element name="attributes" type="tns:Amqp091MessageAttributesType" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Message attributes.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="body" type="xsd:base64Binary" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>
                                Message body. For AMQP 0-9-1 this is always a binary value.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="amqp091Message" type="tns:Amqp091MessageType"/>

    <xsd:complexType name="Amqp091MessageAttributesType">
        <xsd:annotation>
            <xsd:documentation>
                Representation AMQP 0-9-1 message attributes.
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="contentType" type="xsd:string" minOccurs="0" />
            <xsd:element name="contentEncoding" type="xsd:string" minOccurs="0" />
            <xsd:element name="routingKey" type="xsd:string" minOccurs="0" />
            <xsd:element name="deliveryMode" type="tns:DataMessageDeliveryMode" minOccurs="0"/>
            <xsd:element name="priority" type="xsd:int" minOccurs="0"/>
            <xsd:element name="correlationId" type="xsd:string" minOccurs="0" />
            <xsd:element name="replyTo" type="xsd:string" minOccurs="0" />
            <!--<xsd:element name="expiration" type="xsd:string" minOccurs="0"/>-->  <!-- expiration will be put here after its type is clarified -->
            <xsd:element name="messageId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0"/>
            <xsd:element name="type" type="xsd:string" minOccurs="0"/>
            <xsd:element name="userId" type="xsd:string" minOccurs="0"/>
            <xsd:element name="appId" type="xsd:string" minOccurs="0"/>

            <xsd:element name="other" type="tns:DataMessagePropertyType" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        Message attributes (key-value pairs), other than the standard ones.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataMessagePropertyType">
        <xsd:annotation>
            <xsd:documentation>
                Message property (key-value pair).
            </xsd:documentation>
            <xsd:appinfo>
                <a:since>4.0</a:since>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Name of the property.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="value" type="xsd:anyType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Value of the property.
                    </xsd:documentation>
                    <xsd:appinfo>
                        <a:rawType/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:simpleType name="DataMessageDeliveryMode">
        <xsd:annotation>
            <xsd:documentation>
                Delivery mode. Not all modes are applicable to all message types (JMS, AMQP 0-9-1, AMQP 1.0, etc).
            </xsd:documentation>
            <xsd:appinfo>
                <jaxb:typesafeEnumClass/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="persistent">
                <xsd:annotation>
                    <xsd:documentation>
                        Persistent delivery mode.
                    </xsd:documentation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="PERSISTENT"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="nonPersistent">
                <xsd:annotation>
                    <xsd:documentation>
                        Non-persistent delivery mode.
                    </xsd:documentation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="NON_PERSISTENT"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>

</xsd:schema>
