<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2012 Evolveum
  ~
  ~ The contents of this file are subject to the terms
  ~ of the Common Development and Distribution License
  ~ (the License). You may not use this file except in
  ~ compliance with the License.
  ~
  ~ You can obtain a copy of the License at
  ~ http://www.opensource.org/licenses/cddl1 or
  ~ CDDLv1.0.txt file in the source code distribution.
  ~ See the License for the specific language governing
  ~ permission and limitations under the License.
  ~
  ~ If applicable, add the following below the CDDL Header,
  ~ with the fields enclosed by brackets [] replaced by
  ~ your own identifying information:
  ~
  ~ Portions Copyrighted 2012 [name of copyright owner]
  -->

<xsd:schema targetNamespace="http://midpoint.evolveum.com/xml/ns/public/common/api-types-2"
            xmlns:tns="http://midpoint.evolveum.com/xml/ns/public/common/api-types-2"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-2a"
            xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-2"
            xmlns:t="http://prism.evolveum.com/xml/ns/public/types-2"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
            xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"
            elementFormDefault="qualified"
            jaxb:extensionBindingPrefixes="xjc"
            jaxb:version="2.0">

    <xsd:annotation>
        <xsd:documentation>
            Schema that defines data types used in XML version of midPoint APIs.
            
            Version: 2.0
            Recommended namespace prefix: apit
        </xsd:documentation>
    </xsd:annotation>

    <xsd:import namespace="http://www.w3.org/2001/XMLSchema" schemaLocation="http://www.w3.org/2001/XMLSchema">
        <xsd:annotation>
            <xsd:documentation>
                Importing the schema of XSD schema definition explicitly. This causes that we can use "strict" matching
                for the xsd:schema elements used in runtime.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:import>

	<xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/common/common-2a"
                schemaLocation="http://midpoint.evolveum.com/xml/ns/public/common/common-2a">
        <xsd:annotation>
            <xsd:documentation>
                Common midPoint schema.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:import>

    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/annotation-2"
    			schemaLocation="http://prism.evolveum.com/xml/ns/public/annotation-2">
        <xsd:annotation>
            <xsd:documentation>
                Common midPoint annotations used in various XSD schemas.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:import>
    
    <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/types-2"
    			schemaLocation="http://prism.evolveum.com/xml/ns/public/types-2">
        <xsd:annotation>
            <xsd:documentation>
                Prism data types.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:import>
    
    <xsd:complexType name="ImportOptionsType">
        <xsd:annotation>
            <xsd:documentation>
                The options for import tasks. It specifies optional settings for import such as "overwrite" and "stop on
                error".
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="overwrite" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to a true value it will cause that objects that are already in the repository will be
                        overwritten by the imported objects.
                        It may not be applicable to all import types. E.g. it makes no sense for import from resource,
                        as this
                        is not storing objects in the repository directly.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="keepOid" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to a true value it will cause that objects that overwritten objects will reuse the same
                        OID
                        as previous objects.
                        May be potentially dangerous. USE WITH CARE.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="stopAfterErrors" type="xsd:int" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Number of errors that will cause import to stop. If set to one the import will stop on first
                        error.
                        If set to zero or negative value the import will not stop on any error.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="summarizeSucceses" type="xsd:boolean" minOccurs="0" default="true">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the successfuly imported items will be summarized in the result.
                        WARNING: setting this to false may result in a very large result structure and may cause
                        overflow of
                        the system memory.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="summarizeErrors" type="xsd:boolean" minOccurs="0" default="false">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="referentialIntegrity" type="xsd:boolean" minOccurs="0" default="false">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="validateStaticSchema" type="xsd:boolean" minOccurs="0" default="true">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="validateDynamicSchema" type="xsd:boolean" minOccurs="0" default="true">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="encryptProtectedValues" type="xsd:boolean" minOccurs="0" default="true">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="fetchResourceSchema" type="xsd:boolean" minOccurs="0" default="false">
                <xsd:annotation>
                    <xsd:documentation>
                        If set to true the importe errors will be summarized in the result.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ObjectModificationType">
        <xsd:annotation>
            <xsd:documentation>
                Describes a change of attributes of a specific object.
                All changes are expected to happen atomically, but
                there may be exceptions. Please check with the
                documentation of the interface using this type for
                more details.

               	Used in the interfaces (modifyObject)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="oid" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        OID of the object to modify.

                        Due to consistency reasons this should rather be
                        an attribute. But it is an element because of
                        OpenESB bug with attributes in message parts.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="modification" type="t:ItemDeltaType" minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        Describe a change to a single attribute of an object.
                        
                        TODO: this should be renamed to "itemModification"
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="objectModification" type="tns:ObjectModificationType"/>
    
    
    <xsd:complexType name="ObjectListType">
        <xsd:sequence>
            <xsd:element name="object" type="c:ObjectType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="count" type="xsd:int"/>
    </xsd:complexType>
    
    <xsd:complexType name="ResourceObjectShadowListType">
        <xsd:sequence>
            <xsd:element name="object" type="c:ShadowType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="UserListType">
        <xsd:sequence>
            <xsd:element name="user" type="c:UserType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
        <xsd:complexType name="ResourceObjectType">
        <xsd:annotation>
            <xsd:appinfo>
                <a:container/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:any namespace="##other" minOccurs="1" maxOccurs="unbounded" processContents="lax">
                <xsd:annotation>
                    <xsd:appinfo>
                        <xjc:dom/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:any>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="ResourceObjectIdentificationType">
        <xsd:annotation>
            <xsd:appinfo>
                <a:container/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:any namespace="##other" minOccurs="1" maxOccurs="unbounded" processContents="lax">
                <xsd:annotation>
                    <xsd:appinfo>
                        <xjc:dom/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:any>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long" use="optional"/>
    </xsd:complexType>
    
    <xsd:complexType name="PropertyReferenceListType">
        <xsd:annotation>
            <xsd:documentation>
                DEPRECATED
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="property" type="t:XPathType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="OperationOptionsType">
        <xsd:annotation>
            <xsd:documentation>
                Operation Options
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="objectOption" type="tns:ObjectOperationOptionsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ObjectOperationOptionsType">
        <xsd:annotation>
            <xsd:documentation>
                TODO
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="selector" type="tns:ObjectSelectorType" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="option" type="tns:ObjectOperationOptionType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ObjectSelectorType">
        <xsd:annotation>
            <xsd:documentation>
                TODO
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="path" type="t:XPathType" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:simpleType name="ObjectOperationOptionType">
        <xsd:annotation>
            <xsd:documentation>
                TODO
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="resolve">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="RESOLVE"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="no-fetch">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="NO_FETCH"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="force">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="FORCE"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    
</xsd:schema>

