<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 Evolveum
  ~
  ~ The contents of this file are subject to the terms
  ~ of the Common Development and Distribution License
  ~ (the License). You may not use this file except in
  ~ compliance with the License.
  ~
  ~ You can obtain a copy of the License at
  ~ http://www.opensource.org/licenses/cddl1 or
  ~ CDDLv1.0.txt file in the source code distribution.
  ~ See the License for the specific language governing
  ~ permission and limitations under the License.
  ~
  ~ If applicable, add the following below the CDDL Header,
  ~ with the fields enclosed by brackets [] replaced by
  ~ your own identifying information:
  ~
  ~ Portions Copyrighted 2012 [name of copyright owner]
  -->

<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://evolveum.com/midpoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        >

    <process id="AddRoles" name="Add Roles Approval (default)" isExecutable="true">

        <!-- This process takes care of approving adding a set of roles to a user.

           Input variables:
             - assignmentsToApprove: a list of assignments to be added to the user
             - decisionList: an empty list of users' decisions
             - userName: name of user to which the roles are to be added

           Output variables:
             - approvedRoles: a list of roles (their names?) to be added to the user
        -->


        <startEvent id="start" name="Start" />

        <sequenceFlow sourceRef="start" targetRef="loopAssignments" />

        <!-- variables:
              - assignmentsToApprove: list of assignments that have to be approved (independently)
              - assignmentsApprovals: list of approved/rejected assignments
              - allDecisions: list of all decisions done by individual people (without any structure, for now)
        -->

        <subProcess id="loopAssignments">
            <multiInstanceLoopCharacteristics isSequential="false"
                                              activiti:collection="${assignmentsToApprove}" activiti:elementVariable="assignmentToApprove"/>

            <!-- variables:
                  - assignmentToApprove: an assignment that has to be approved through a structured approval process
                  - loopLevels_stop: whether to stop looping through levels (i.e. when the process is rejected at a particular level
                  - role: role to be approved
            -->

            <startEvent id="loopAssignments.start" />
            <sequenceFlow sourceRef="loopAssignments.start" targetRef="loopAssignments.start.1" />

            <serviceTask id="loopAssignments.start.1" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
            <sequenceFlow sourceRef="loopAssignments.start.1" targetRef="initializeLoopThroughLevels" />

            <serviceTask id="initializeLoopThroughLevels" activiti:class="com.evolveum.midpoint.wf.processes.addroles.InitializeLoopThroughLevels" />
            <sequenceFlow sourceRef="initializeLoopThroughLevels" targetRef="loopLevels" />

            <subProcess id="loopLevels">
                <multiInstanceLoopCharacteristics isSequential="true"
                    activiti:collection="${assignmentToApprove.approvalSchema.level}" activiti:elementVariable="level">
                        <completionCondition>${loopLevels_stop}</completionCondition>
                    </multiInstanceLoopCharacteristics>

                <!-- variables:
                      - level: information about particular level of approval (e.g. list of approvers)
                      - loopApproversInLevel_stop: whether to stop looping through approvers at this level
                      - decisionList: list of decisions done at this level
                -->

                <startEvent id="loopLevels.start" />
                <sequenceFlow sourceRef="loopLevels.start" targetRef="loopLevels.start.1" />

                <serviceTask id="loopLevels.start.1" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
                <sequenceFlow sourceRef="loopLevels.start.1" targetRef="initializeLoopThroughApproversInLevel" />

                <serviceTask id="initializeLoopThroughApproversInLevel" activiti:class="com.evolveum.midpoint.wf.processes.addroles.InitializeLoopThroughApproversInLevel" />
                <sequenceFlow sourceRef="initializeLoopThroughApproversInLevel" targetRef="shouldBeLevelExecutedQ" />

                <exclusiveGateway id="shouldBeLevelExecutedQ"/>

                <sequenceFlow sourceRef='shouldBeLevelExecutedQ' targetRef='loopApproversInLevel' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${!loopApproversInLevel_stop}</conditionExpression>
                </sequenceFlow>
                <sequenceFlow sourceRef='shouldBeLevelExecutedQ' targetRef='before.summarizeDecisions' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${loopApproversInLevel_stop}</conditionExpression>
                </sequenceFlow>

                <subProcess id="loopApproversInLevel">
                    <multiInstanceLoopCharacteristics isSequential="false"
                                                      activiti:collection="${approversInLevel}" activiti:elementVariable="approverRef">
                        <completionCondition>${loopApproversInLevel_stop}</completionCondition>
                    </multiInstanceLoopCharacteristics>

                    <startEvent id="loopApproversInLevel.start" />
                    <sequenceFlow sourceRef="loopApproversInLevel.start" targetRef="loopApproversInLevel.start.1" />

                    <serviceTask id="loopApproversInLevel.start.1" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
                    <sequenceFlow sourceRef="loopApproversInLevel.start.1" targetRef="approve" />

                    <userTask id="approve" name="Approve adding ${assignmentToApprove.roleWithTimeInterval} to ${userName}" activiti:assignee="${approverRef.oid}">
                        <extensionElements>
                            <activiti:formProperty id="userName" expression="#{userName}" name="01: User" type="string" required="false" readable="true" writable="false"></activiti:formProperty>
                            <activiti:formProperty id="role" expression="#{assignmentToApprove.role.name.orig}" name="02: Role" required="false" readable="true" writable="false"></activiti:formProperty>
                            <activiti:formProperty id="timeInterval" expression="#{assignmentToApprove.timeInterval}" name="03: Time interval" readable="true" writable="false"/>
                            <activiti:formProperty id="comment" expression="#{assignmentToApprove.assignment.description}" name="04: Requester's comment" type="string" required="false" readable="true" writable="false"></activiti:formProperty>
                            <activiti:formProperty id="comment#C" name="05: Your comment" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                            <activiti:formProperty id="decision" name="decision to be filled-in automatically" type="boolean" required="false" readable="true" writable="true"></activiti:formProperty>
                        </extensionElements>
                    </userTask>
                    <sequenceFlow sourceRef="approve" targetRef="recordDecision" />

                    <!-- modifies loopApproversInLevel_stop, if necessary -->
                    <serviceTask id="recordDecision" activiti:class="com.evolveum.midpoint.wf.processes.addroles.RecordIndividualDecision" />
                    <sequenceFlow sourceRef="recordDecision" targetRef="before.loopApproversInLevel.end" />

                    <serviceTask id="before.loopApproversInLevel.end" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
                    <sequenceFlow sourceRef="before.loopApproversInLevel.end" targetRef="loopApproversInLevel.end" />

                    <endEvent id="loopApproversInLevel.end" />
                </subProcess>
                <sequenceFlow sourceRef="loopApproversInLevel" targetRef="before.summarizeDecisions" />

                <!-- modifies loopLevels_stop, if necessary -->
                <serviceTask id="before.summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
                <sequenceFlow sourceRef="before.summarizeDecisions" targetRef="summarizeDecisions" />

                <serviceTask id="summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.processes.addroles.SummarizeDecisionsInLevel" />
                <sequenceFlow sourceRef="summarizeDecisions" targetRef="loopLevels.end" />

                <endEvent id="loopLevels.end" />
            </subProcess>
            <sequenceFlow sourceRef="loopLevels" targetRef="before.recordAssignmentApproval"></sequenceFlow>

            <serviceTask id="before.recordAssignmentApproval" activiti:class="com.evolveum.midpoint.wf.processes.addroles.DumpVariables" />
            <sequenceFlow sourceRef="before.recordAssignmentApproval" targetRef="recordAssignmentApproval"></sequenceFlow>

            <serviceTask id="recordAssignmentApproval" activiti:class="com.evolveum.midpoint.wf.processes.addroles.RecordAssignmentApproval" />
            <sequenceFlow sourceRef="recordAssignmentApproval" targetRef="loopAssignments.end"></sequenceFlow>

            <endEvent id="loopAssignments.end" />
        </subProcess>

        <sequenceFlow sourceRef="loopAssignments" targetRef="end"></sequenceFlow>

        <endEvent id="end"></endEvent>
    </process>

</definitions>