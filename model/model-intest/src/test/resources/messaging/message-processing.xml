<!--
  ~ Copyright (c) 2010-2019 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--
{
  encrypted=false,
  esbEvent=[
  {
    sourceId=ldap,
    membershipType=flattened,
    fieldName=members,
    groupId=00000000000000000000000000000001,
    changeOccurred=false,
    createdOnMicros=1551884863420000,
    subjectId=banderson,
    id=94320942304930294023940329403294,
    sequenceNumber=1000,
    eventType=MEMBERSHIP_ADD,
    groupName=etc: midpointGroups
  }
]}
QName objectClassName, Map<String, Object> attributes) throws SchemaException {
-->
<messageProcessingConfiguration xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3">
	<transformerExpression>
		<script>
			<code>
				import com.evolveum.midpoint.xml.ns._public.common.common_3.*
				import static com.evolveum.midpoint.schema.constants.SchemaConstants.*

				this.binding.variables.each {k,v -> println "$k = $v"}
				esbEvent = message.bodyAsMap['esbEvent'][0]
				log.info('esbEvent = {}', esbEvent)
				switch (esbEvent['eventType']) {
					case 'MEMBERSHIP_ADD':
						// todo check the shadow existence
						subjectId = esbEvent['subjectId']
						attributes = new HashMap()
						attributes.put(ICFS_NAME, subjectId)
						attributes.put(ICFS_UID, subjectId)
						change = midpoint.createChangeDescriptionForNewObject(resource, RI_ACCOUNT_OBJECT_CLASS, attributes)
						break
					default:
						change = null
						log.warn('Unsupported event type: {} -> {}', eventType, esbEvent)
				}
				change
			</code>
		</script>
	</transformerExpression>
</messageProcessingConfiguration>