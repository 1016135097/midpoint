/*
 * Copyright (c) 2010-2013 Evolveum
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.evolveum.midpoint.wf.api;

import javax.xml.namespace.QName;

/**
 * Names of workflow-related items that are stored in task extensions.
 *
 * BEWARE: Although these are part of wf api, DO NOT USE them directly. Many of them are specific to particular
 * change processors or wrappers.
 *
 * @author mederly
 */
public class WfTaskExtensionItemsNames {

    public static final String WORKFLOW_EXTENSION_NS = "http://midpoint.evolveum.com/model/workflow/extension-2";

    // Contains relevant activiti process instance ID (when known).
    public static final QName WFPROCESSID_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "processInstanceId");

    // Just a flag whether the process instance related to the task has already finished (used e.g. to determine if the shadowing handler should end or not).
    public static final QName WFPROCESS_INSTANCE_FINISHED_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "processInstanceFinished");

    // Contains name of class that manages this particular model operation ("change", thus "change processor").
    public static final QName WFCHANGE_PROCESSOR_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "changeProcessor");

    // Contains history of process status messages. Such messages can contain any process-related messages that
    // should be visible to the user (e.g. "your request was approved by engineering group, and is being sent
    // to the management"). For simple processes, the status has mostly the value "Workflow process instance
    // has proceeded". In order to be able to sort these status messages chronologically, each is prefixed
    // by a timestamp (long value + formatted string value). Storing of these wfStatus values can be simply
    // turned off in WfTaskUtil class.
    public static final QName WFSTATUS_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "status");

    // A dump of recent process instance variables (for diagnostic purposes).
    public static final QName WFLAST_VARIABLES_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "lastVariables");

    // String representation of recent process instance information (for diagnostic purposes).
    // (For primary change processor, this information is generated by workflow process wrapper.)
    public static final QName WFLAST_DETAILS_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "lastDetails");

    // =================== THE FOLLOWING ITEMS ARE SPECIFIC TO PRIMARY CHANGE PROCESSOR ===================

    // Contains deltaIn(i), i.e. delta(s) that has to be approved.
    public static final QName WFDELTA_TO_PROCESS_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "deltaToProcess");

    // Contains deltaOut(i), i.e. delta(s) that are the result of the approval process (most common situation is
    // that deltaOut(i) = either deltaIn(i) (if approved), or null/empty delta (if rejected).
    public static final QName WFRESULTING_DELTA_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "resultingDelta");

    // Contains a set of approvers who approved the delta(s). The wrapper should put here those approvers that
    // will be stored into approvers list in metadata when the operation is really executed.
    public static final QName WFAPPROVED_BY_REFERENCE_NAME = new QName(WORKFLOW_EXTENSION_NS, "approvedBy");

    // Name of class that provides an interface between midPoint and activiti process.
    public static final QName WFPROCESS_WRAPPER_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "processWrapper");


    public static final QName WFROOT_TASK_OID_PROPERTY_NAME = new QName(WORKFLOW_EXTENSION_NS, "rootTaskOid");
}
