#
# Copyright (c) 2010-2014 Evolveum
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

WizardStep.title=
SchemaHandlingStep.message.validationError=Inserted objectClass value: '{0}' is not valid. Please provide valid objectClass value.

SchemaStep.tooltip.kind=Kind specified what this object is, whether it is account, entitlement or something else.
SchemaStep.tooltip.intent=Intent specifies what midPoint should do with the object. Intent sorts objects of the same kind into several categories. Objects with different intents may be handled differently by midPoint.
SchemaStep.tooltip.nativeObjectClass=Object class name how it is natively known by the resource (or the connector).
SchemaStep.tooltip.isDefault=If set to true then this definition is the default for its kind. I.e. if no intent is explicitly specified then this definition will be used.

SchemaHandlingStep.tooltip.kind=Kind specified what this object is, whether it is account, entitlement or something else.
SchemaHandlingStep.tooltip.intent=Intent specifies what midPoint should do with the object. Intent sorts objects of the same kind into several categories. Objects with different intents may be handled differently by midPoint.
SchemaHandlingStep.tooltip.default=If set to true then this definition is the default for its kind. I.e. if no intent is explicitly specified then this definition will be used.
SchemaHandlingStep.tooltip.dependency=Dependencies are object types that has to be processed before this object types is processed. I.e. this object type depends on them. The object types on which this object type depends will be provisioned before this object type. Dependencies are used to impose ordering into provisioning operations.
SchemaHandlingStep.tooltip.objectClass=Object class from the schema that will be used to construct instances of this object type.
SchemaHandlingStep.tooltip.attributes=Definitions how individual attributes are to be handled. Each definition may contain inbound/outbound mappings, attribute limitations, etc.
SchemaHandlingStep.tooltip.associations=Definitions how entitlement associations are to be handled.
SchemaHandlingStep.tooltip.assignmentPolicyRef=Assignment policy specifies how strictly are the assignments enforced. None: the assignments are not enforced at all; Positive: assignments only add values (never substract); Relative: only changes are propagated, existing values are left as they are; Full: everything is strictly enforced (both changed and existing values).
SchemaHandlingStep.tooltip.iteration=Iteratively find values for unique attributes such as identifiers. MidPoint will try several times to find a unique value for such attributes. 
SchemaHandlingStep.tooltip.protected=Specification of protected instances of this object type. MidPoint can see protected instances but they cannot be touched. Any attempt to modify them will fail. This is used to protect emergency administration accounts such as "root" or "administrator".
SchemaHandlingStep.tooltip.activation=Definition how to map activation states (enabled/disabled/archived) and dates (validity from and to).
SchemaHandlingStep.tooltip.credentials=Definition how to handle credentials such as passwords.

SchemaHandlingStep.dependency.tooltip.order=Normally zero. Can specify an integer that determines the ordering of dependencies that form a cycle and could not be otherwise be resolved (a.k.a. high-order dependencies). 
SchemaHandlingStep.dependency.tooltip.strictness=Specifies how strictly will be the dependency resolved. Lax: if the dependency is not there continue as normal (only used to impose operation ordering); Relaxed: refuse to do operation unless the dependency is tried first, but if that fails then continue anyway; Strict: proceed only is the dependency is tried first and it succeeds. 
SchemaHandlingStep.dependency.tooltip.kind=Kind of the object on which we depend.
SchemaHandlingStep.dependency.tooltip.intent=Intent of the object on which we depend.
SchemaHandlingStep.dependency.tooltip.resourceRef=Resource on which we depend.

SchemaHandlingStep.attribute.tooltip.reference=Name of the attribute to configure. All the settings and mappings below apply to this attribute.
SchemaHandlingStep.attribute.tooltip.allow=If checked allows to specify an attribute which is not in the original resource schema. This can be used to fix faulty connectors that do not provide a complete resource schema, which hides some attributes, etc.
SchemaHandlingStep.attribute.tooltip.limitations=Specify attribute limitations such as multiplicity, ability to read or write it, etc.
SchemaHandlingStep.attribute.tooltip.exclusiveStrong=TODO: SchemaHandlingStep.attribute.tooltip.exclusiveStrong
SchemaHandlingStep.attribute.tooltip.tolerant=Tolerant attributes tolerate values that are set outside of midPoint. Non-tolerant attributes will only allow values that are defined in midPoint (e.g. by resource or role mappings).
SchemaHandlingStep.attribute.tooltip.tolerantVP=A value that matches this pattern will be tolerated. I.e. it will remain as the attribute value even if it is not a result of midPoint processing (mappings).
SchemaHandlingStep.attribute.tooltip.intolerantVP=A value that matches this pattern will NOT be tolerated. I.e. it will be erased from the attribute value even if it is not a result of midPoint processing (mappings).
SchemaHandlingStep.attribute.tooltip.fetchStrategy=How to fetch the attribute when it is needed. Implicit: the attribute is returned by default, it does not need to be requested; Explicit: the attribute is not returned by default, always request it explicitly.
SchemaHandlingStep.attribute.tooltip.matchingRule=A rule that determines if two attribute values have the same meaning. E.g. setting this to 'stringIgnoreCase' will make this attribute efficiently case insensitive.
SchemaHandlingStep.attribute.tooltip.outbound=Outbound mappings map values from midPoint (usually a user) to the resource (usually an account).
SchemaHandlingStep.attribute.tooltip.inbound=Inbound mappings map values from the resource (usually an account) to the midPoint (usually a user).

SchemaHandlingStep.association.tooltip.intent=TODO: SchemaHandlingStep.association.tooltip.intent
SchemaHandlingStep.association.tooltip.direction=TODO: SchemaHandlingStep.association.tooltip.direction
SchemaHandlingStep.association.tooltip.associationAttribute=TODO: SchemaHandlingStep.association.tooltip.associationAttribute
SchemaHandlingStep.association.tooltip.valueAttribute=TODO: SchemaHandlingStep.association.tooltip.valueAttribute
SchemaHandlingStep.association.tooltip.kind=TODO: SchemaHandlingStep.association.tooltip.kind
SchemaHandlingStep.association.tooltip.explicitRefIntegrity=TODO: SchemaHandlingStep.association.tooltip.explicitRefIntegrity

SchemaHandlingStep.iteration.tooltip.maxIteration=TODO: SchemaHandlingStep.iteration.tooltip.maxIteration
SchemaHandlingStep.iteration.tooltip.variable=TODO: SchemaHandlingStep.iteration.tooltip.variable
SchemaHandlingStep.iteration.tooltip.returnMultiplicity=TODO: SchemaHandlingStep.iteration.tooltip.returnMultiplicity

SchemaHandlingStep.activation.tooltip.fetchStrategy=TODO: SchemaHandlingStep.activation.tooltip.fetchStrategy
SchemaHandlingStep.activation.tooltip.outbound=TODO: SchemaHandlingStep.activation.tooltip.outbound
SchemaHandlingStep.activation.tooltip.inbound=TODO: SchemaHandlingStep.activation.tooltip.inbound

SchemaHandlingStep.credentials.tooltip.fetchStrategy=TODO: SchemaHandlingStep.credentials.tooltip.fetchStrategy
SchemaHandlingStep.credentials.tooltip.outbound=TODO: SchemaHandlingStep.credentials.tooltip.outbound
SchemaHandlingStep.credentials.tooltip.inbound=TODO: SchemaHandlingStep.credentials.tooltip.inbound
SchemaHandlingStep.credentials.tooltip.passwordPolicyRef=TODO: SchemaHandlingStep.credentials.tooltip.passwordPolicyRef

SchemaHandlingStep.protected.tooltip.name=TODO: SchemaHandlingStep.protected.tooltip.name
SchemaHandlingStep.protected.tooltip.uid=TODO: SchemaHandlingStep.protected.tooltip.uid
SchemaHandlingStep.protected.tooltip.filter=TODO: SchemaHandlingStep.protected.tooltip.filter
SchemaHandlingStep.tooltip.filterClause=TODO: SchemaHandlingStep.tooltip.filterClause

SchemaHandlingStep.limitations.tooltip.layers=TODO: SchemaHandlingStep.limitations.tooltip.layers
SchemaHandlingStep.limitations.tooltip.propertyAccess=TODO: SchemaHandlingStep.limitations.tooltip.propertyAccess
SchemaHandlingStep.limitations.tooltip.other=TODO: SchemaHandlingStep.limitations.tooltip.other

SchemaHandlingStep.mapping.tooltip.authoritative=TODO: SchemaHandlingStep.mapping.tooltip.authoritative
SchemaHandlingStep.mapping.tooltip.exclusive=TODO: SchemaHandlingStep.mapping.tooltip.exclusive
SchemaHandlingStep.mapping.tooltip.strength=TODO: SchemaHandlingStep.mapping.tooltip.strength
SchemaHandlingStep.mapping.tooltip.channel=TODO: SchemaHandlingStep.mapping.tooltip.channel
SchemaHandlingStep.mapping.tooltip.exceptChannel=TODO: SchemaHandlingStep.mapping.tooltip.exceptChannel
SchemaHandlingStep.mapping.tooltip.source=TODO: SchemaHandlingStep.mapping.tooltip.source
SchemaHandlingStep.mapping.tooltip.target=TODO: SchemaHandlingStep.mapping.tooltip.target
SchemaHandlingStep.mapping.tooltip.expressionType=TODO: SchemaHandlingStep.mapping.tooltip.expressionType
SchemaHandlingStep.mapping.tooltip.expressionLanguage=TODO: SchemaHandlingStep.mapping.tooltip.expressionLanguage
SchemaHandlingStep.mapping.tooltip.expressionValuePolicyRef=TODO: SchemaHandlingStep.mapping.tooltip.expressionValuePolicyRef
SchemaHandlingStep.mapping.tooltip.expression=TODO: SchemaHandlingStep.mapping.tooltip.expression
SchemaHandlingStep.mapping.tooltip.conditionType=TODO: SchemaHandlingStep.mapping.tooltip.conditionType
SchemaHandlingStep.mapping.tooltip.conditionLanguage=TODO: SchemaHandlingStep.mapping.tooltip.conditionLanguage
SchemaHandlingStep.mapping.tooltip.conditionValuePolicyRef=TODO: SchemaHandlingStep.mapping.tooltip.conditionValuePolicyRef
SchemaHandlingStep.mapping.tooltip.condition=TODO: SchemaHandlingStep.mapping.tooltip.condition

SynchronizationStep.tooltip.kind=TODO: SynchronizationStep.tooltip.kind
SynchronizationStep.tooltip.intent=TODO: SynchronizationStep.tooltip.intent
SynchronizationStep.tooltip.objectClass=TODO: SynchronizationStep.tooltip.objectClass
SynchronizationStep.tooltip.focus=TODO: SynchronizationStep.tooltip.focus
SynchronizationStep.tooltip.enabled=TODO: SynchronizationStep.tooltip.enabled
SynchronizationStep.tooltip.condition=TODO: SynchronizationStep.tooltip.condition
SynchronizationStep.tooltip.confirmation=TODO: SynchronizationStep.tooltip.confirmation
SynchronizationStep.tooltip.objectTemplate=TODO: SynchronizationStep.tooltip.objectTemplate
SynchronizationStep.tooltip.reconcile=TODO: SynchronizationStep.tooltip.reconcile
SynchronizationStep.tooltip.opportunistic=TODO: SynchronizationStep.tooltip.opportunistic
SynchronizationStep.tooltip.correlation=TODO: SynchronizationStep.tooltip.correlation
SynchronizationStep.tooltip.reaction=TODO: SynchronizationStep.tooltip.reaction

SynchronizationStep.reaction.tooltip.situation=TODO: SynchronizationStep.reaction.tooltip.situation
SynchronizationStep.reaction.tooltip.channel=TODO: SynchronizationStep.reaction.tooltip.channel
SynchronizationStep.reaction.tooltip.synchronize=TODO: SynchronizationStep.reaction.tooltip.synchronize
SynchronizationStep.reaction.tooltip.reconcile=TODO: SynchronizationStep.reaction.tooltip.reconcile
SynchronizationStep.reaction.tooltip.objectTemplateRef=TODO: SynchronizationStep.reaction.tooltip.objectTemplateRef
SynchronizationStep.reaction.tooltip.action=TODO: SynchronizationStep.reaction.tooltip.action

ResourceWizard.expression.tooltip.type=TODO: ResourceWizard.expression.tooltip.type
ResourceWizard.expression.tooltip.language=TODO: ResourceWizard.expression.tooltip.language
ResourceWizard.expression.tooltip.policyRef=TODO: ResourceWizard.expression.tooltip.policyRef
ResourceWizard.expression.tooltip.expression=TODO: ResourceWizard.expression.tooltip.expression

CapabilityStep.capability.read.tooltip=TODO: CapabilityStep.capability.read.tooltip
CapabilityStep.capability.update.tooltip=TODO: CapabilityStep.capability.update.tooltip
CapabilityStep.capability.create.tooltip=TODO: CapabilityStep.capability.create.tooltip
CapabilityStep.capability.delete.tooltip=TODO: CapabilityStep.capability.delete.tooltip
CapabilityStep.capability.liveSync.tooltip=TODO: CapabilityStep.capability.liveSync.tooltip
CapabilityStep.capability.testConnection.tooltip=TODO: CapabilityStep.capability.testConnection.tooltip
CapabilityStep.capability.activation.tooltip=TODO: CapabilityStep.capability.activation.tooltip
CapabilityStep.capability.credentials.tooltip=TODO: CapabilityStep.capability.credentials.tooltip
CapabilityStep.capability.script.tooltip=TODO: CapabilityStep.capability.script.tooltip

CapabilityStep.activation.tooltip.enabled=TODO: CapabilityStep.activation.tooltip.enabled
CapabilityStep.activation.tooltip.returnedByDefault=TODO: CapabilityStep.activation.tooltip.returnedByDefault
CapabilityStep.activation.tooltip.ignoreAttribute=TODO: CapabilityStep.activation.tooltip.ignoreAttribute
CapabilityStep.activation.tooltip.attributeName=TODO: CapabilityStep.activation.tooltip.attributeName
CapabilityStep.activation.tooltip.enableList=TODO: CapabilityStep.activation.tooltip.enableList
CapabilityStep.activation.tooltip.disableList=TODO: CapabilityStep.activation.tooltip.disableList
CapabilityStep.activation.tooltip.validFromEnabled=TODO: CapabilityStep.activation.tooltip.validFromEnabled
CapabilityStep.activation.tooltip.validFromReturned=TODO: CapabilityStep.activation.tooltip.validFromReturned
CapabilityStep.activation.tooltip.validToEnabled=TODO: CapabilityStep.activation.tooltip.validToEnabled
CapabilityStep.activation.tooltip.validToReturned=TODO: CapabilityStep.activation.tooltip.validToReturned

CapabilityStep.script.tooltip.enabled=TODO: CapabilityStep.script.tooltip.enabled
CapabilityStep.script.tooltip.onConnector=TODO: CapabilityStep.script.tooltip.onConnector
CapabilityStep.script.tooltip.onResource=TODO: CapabilityStep.script.tooltip.onResource

CapabilityStep.credentials.tooltip.enabled=TODO: CapabilityStep.credentials.tooltip.enabled
CapabilityStep.credentials.tooltip.passEnabled=TODO: CapabilityStep.credentials.tooltip.passEnabled
CapabilityStep.credentials.tooltip.passReturned=TODO: CapabilityStep.credentials.tooltip.passReturned

QNameEditor.tooltip.attribute=TODO: QNameEditor.tooltip.attribute
QNameEditor.tooltip.namespace=TODO: QNameEditor.tooltip.namespace

